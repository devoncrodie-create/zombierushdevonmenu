--// Services 
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

--// State
local hitboxEnabled, followEnabled, flyEnabled, noclipEnabled, rapidFireEnabled = false, false, false, false, false
local menuOpen = true
local lastClickTime = 0
local followSpeed = 0.15
local followOffset = 1
local hitboxSize = Vector3.new(20,20,20)
local flySpeed = 50
local char, humRoot, humanoid, bodyVel, bodyGyro

-- Handle respawn
local function onCharacterAdded(character)
    char = character
    humRoot = char:WaitForChild("HumanoidRootPart")
    humanoid = char:WaitForChild("Humanoid")
    if bodyVel then bodyVel:Destroy(); bodyVel=nil end
    if bodyGyro then bodyGyro:Destroy(); bodyGyro=nil end
end
char = player.Character or player.CharacterAdded:Wait()
onCharacterAdded(char)
player.CharacterAdded:Connect(onCharacterAdded)

--// GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ZombieMenuGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 440)
frame.Position = UDim2.new(0.05,0,0.05,0)
frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Title (TextButton for dragging & double click)
local titleLabel = Instance.new("TextButton")
titleLabel.Size = UDim2.new(1,0,0,30)
titleLabel.BackgroundColor3 = Color3.fromRGB(50,50,50)
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextScaled = true
titleLabel.Text = "Devon's Menu (BETA)"
titleLabel.Parent = frame
titleLabel.ZIndex = 25

-- Collapse / Expand menu
local function resetCheats()
    hitboxEnabled, followEnabled, flyEnabled, noclipEnabled, rapidFireEnabled = false, false, false, false, false
end
local function setMenuState(open)
    menuOpen = open
    if open then
        frame.Size = UDim2.new(0, 220, 0, 440)
    else
        frame.Size = UDim2.new(0, 220, 0, 30)
        resetCheats()
    end
    for _, child in ipairs(frame:GetChildren()) do
        if child ~= titleLabel then
            child.Visible = open
        end
    end
end
lastClickTime = 0
titleLabel.MouseButton1Click:Connect(function()
    local now = tick()
    if now - lastClickTime < 0.3 then
        setMenuState(not menuOpen)
    end
    lastClickTime = now
end)
setMenuState(true)

--âœ… Proper draggable menu
local dragging, dragStart, startPos, dragInput = false, nil, nil, nil
titleLabel.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
titleLabel.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y
        )
    end
end)

-- Buttons
local function createButton(name, posY, color)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0,180,0,40)
    btn.Position = UDim2.new(0,20,0,posY)
    btn.BackgroundColor3 = color or Color3.fromRGB(200,0,0)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Text = name
    btn.Parent = frame
    btn.ZIndex = 10
    return btn
end

local hitboxButton    = createButton("Hitbox: OFF", 40)
local followButton    = createButton("Follow: OFF", 90)
local flyButton       = createButton("Fly: OFF", 140)
local noclipButton    = createButton("NoClip: OFF", 190)
local killAllButton   = createButton("Kill All Zombies", 240, Color3.fromRGB(255,165,0))
local rapidFireButton = createButton("Rapid Fire: OFF", 290)

-- Sliders
local function createSlider(labelText, posY, minVal, maxVal, isSpeed)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0,180,0,20)
    label.Position = UDim2.new(0,20,0,posY)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Text = labelText
    label.Parent = frame
    label.ZIndex = 10

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0,180,0,20)
    sliderFrame.Position = UDim2.new(0,20,0,posY+20)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(100,100,100)
    sliderFrame.Parent = frame
    sliderFrame.ZIndex = 10

    local fill = Instance.new("Frame")
    fill.Size = UDim2.new(0,0,1,0)
    fill.BackgroundColor3 = Color3.fromRGB(0,200,0)
    fill.Parent = sliderFrame
    fill.ZIndex = 11

    local knob = Instance.new("TextButton")
    knob.Size = UDim2.new(0,20,1,0)
    knob.Position = UDim2.new(0,0,0,0)
    knob.BackgroundColor3 = Color3.fromRGB(255,255,255)
    knob.Text = ""
    knob.Parent = sliderFrame
    knob.AutoButtonColor = false
    knob.ZIndex = 12

    local dragging = false
    local value = minVal

    knob.MouseButton1Down:Connect(function() dragging = true end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then dragging=false end
    end)

    RunService.RenderStepped:Connect(function()
        if dragging then
            local mouseX = math.clamp(UserInputService:GetMouseLocation().X - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X)
            fill.Size = UDim2.new(0, mouseX, 1, 0)
            knob.Position = UDim2.new(0, mouseX - knob.AbsoluteSize.X/2, 0, 0)
            value = minVal + (mouseX/sliderFrame.AbsoluteSize.X)*(maxVal-minVal)
            if isSpeed then
                followSpeed = value
                label.Text = "Follow Speed: "..string.format("%.2f", value)
            elseif labelText:find("Height") then
                followOffset = value
                label.Text = "Follow Height: "..string.format("%.1f", value)
            else
                hitboxSize = Vector3.new(value,value,value)
                label.Text = "Hitbox Size: "..string.format("%.1f", value)
            end
        end
    end)
end

createSlider("Follow Speed: 0.15", 340, 0.05, 0.5, true)
createSlider("Follow Height: 1", 380, 1, 100, false)
createSlider("Hitbox Size: 20", 420, 5, 100, false)

-- Update button colors
local function updateButton(btn,state,name)
    btn.Text = name..(state and ": ON" or ": OFF")
    btn.BackgroundColor3 = state and Color3.fromRGB(0,200,0) or Color3.fromRGB(200,0,0)
end

hitboxButton.MouseButton1Click:Connect(function()
    hitboxEnabled = not hitboxEnabled
    updateButton(hitboxButton,hitboxEnabled,"Hitbox")
end)
followButton.MouseButton1Click:Connect(function()
    followEnabled = not followEnabled
    updateButton(followButton,followEnabled,"Follow")
end)
flyButton.MouseButton1Click:Connect(function()
    flyEnabled = not flyEnabled
    updateButton(flyButton,flyEnabled,"Fly")
end)
noclipButton.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    updateButton(noclipButton,noclipEnabled,"NoClip")
end)

--// FIXED Kill All Zombies
killAllButton.MouseButton1Click:Connect(function()
    local function killHumanoids(parent)
        for _, obj in ipairs(parent:GetChildren()) do
            if obj:IsA("Model") then
                local hum = obj:FindFirstChildWhichIsA("Humanoid")
                if hum and hum.Health > 0 then
                    hum:TakeDamage(hum.MaxHealth)
                end
                killHumanoids(obj)
            end
        end
    end
    local zombieStorage = workspace:FindFirstChild("Zombie Storage")
    if zombieStorage then
        killHumanoids(zombieStorage)
    end
end)

rapidFireButton.MouseButton1Click:Connect(function()
    rapidFireEnabled = not rapidFireEnabled
    updateButton(rapidFireButton, rapidFireEnabled, "Rapid Fire")
end)

--// Rapid Fire (ultra fast)
local mouse = player:GetMouse()
local firing = false
mouse.Button1Down:Connect(function()
    if rapidFireEnabled then
        firing = true
        while firing and rapidFireEnabled do
            local tool = char:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then
                pcall(function() tool:Activate() end)
            end
            task.wait(0.01)
        end
    end
end)
mouse.Button1Up:Connect(function()
    firing = false
end)

--// Fly + Follow + NoClip + Hitbox logic
local keys = {W=false,A=false,S=false,D=false,Space=false,LeftShift=false}
UserInputService.InputBegan:Connect(function(input,gp)
    if not gp and keys[input.KeyCode.Name]~=nil then keys[input.KeyCode.Name]=true end
end)
UserInputService.InputEnded:Connect(function(input)
    if keys[input.KeyCode.Name]~=nil then keys[input.KeyCode.Name]=false end
end)

local zombieStorage = workspace:WaitForChild("Zombie Storage")

RunService.RenderStepped:Connect(function()
    -- Fly
    if flyEnabled and humRoot then
        if not bodyVel then
            bodyVel = Instance.new("BodyVelocity")
            bodyVel.MaxForce = Vector3.new(1e5,1e5,1e5)
            bodyVel.Parent = humRoot
        end
        if not bodyGyro then
            bodyGyro = Instance.new("BodyGyro")
            bodyGyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
            bodyGyro.Parent = humRoot
        end

        local cam = workspace.CurrentCamera
        local lookVector = cam.CFrame.LookVector
        local rightVector = cam.CFrame.RightVector
        local moveDir = Vector3.new()
        if keys.W then moveDir += lookVector end
        if keys.S then moveDir -= lookVector end
        if keys.A then moveDir -= rightVector end
        if keys.D then moveDir += rightVector end
        if keys.Space then moveDir += Vector3.new(0,1,0) end
        if keys.LeftShift then moveDir -= Vector3.new(0,1,0) end
        if moveDir.Magnitude>0 then moveDir=moveDir.Unit*flySpeed end
        bodyVel.Velocity=moveDir
        bodyGyro.CFrame=CFrame.new(humRoot.Position, humRoot.Position + cam.CFrame.LookVector)
    else
        if bodyVel then bodyVel:Destroy(); bodyVel=nil end
        if bodyGyro then bodyGyro:Destroy(); bodyGyro=nil end
    end

    -- NoClip
    if char then
        for _, p in ipairs(char:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = not noclipEnabled end
        end
    end

    -- Follow nearest zombie
    if followEnabled and humRoot then
        local closestZombie, closestDist
        for _, z in ipairs(zombieStorage:GetChildren()) do
            local hrp = z:FindFirstChild("HumanoidRootPart")
            if hrp then
                local dist = (hrp.Position - humRoot.Position).Magnitude
                if not closestDist or dist < closestDist then
                    closestDist = dist
                    closestZombie = hrp
                end
            end
        end
        if closestZombie then
            humRoot.CFrame = humRoot.CFrame:Lerp(
                CFrame.new(closestZombie.Position + Vector3.new(0, followOffset, 0)),
                followSpeed
            )
        end
    end

    -- Hitbox
    for _, z in ipairs(zombieStorage:GetChildren()) do
        local hrp = z:FindFirstChild("HumanoidRootPart")
        local hum = z:FindFirstChildWhichIsA("Humanoid")
        if hrp and hum then
            local hb = z:FindFirstChild("ZombieHitbox")
            if hitboxEnabled then
                if not hb then
                    hb = Instance.new("Part")
                    hb.Name = "ZombieHitbox"
                    hb.Anchored = true
                    hb.CanCollide = false
                    hb.Transparency = 0.5
                    hb.BrickColor = BrickColor.new("Really red")
                    hb.Size = hitboxSize
                    hb.Parent = z
                    hb.Touched:Connect(function(hit)
                        if hit.Parent == char or hit.Parent:FindFirstChildWhichIsA("Tool") then
                            hum:TakeDamage(5)
                        end
                    end)
                end
                hb.Size = hitboxSize
                hb.CFrame = hrp.CFrame
            elseif hb then
                hb:Destroy()
            end
        end
    end
end)
