-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer

-- State
local hitboxEnabled = false
local followEnabled = false
local flyEnabled = false
local noclipEnabled = false
local followSpeed = 0.15
local followOffset = 1
local hitboxSize = Vector3.new(20,20,20)
local flySpeed = 50

local char, humRoot, humanoid, bodyVel, bodyGyro

-- Handle respawn
local function onCharacterAdded(character)
    char = character
    humRoot = char:WaitForChild("HumanoidRootPart")
    humanoid = char:WaitForChild("Humanoid")
    
    if bodyVel then bodyVel:Destroy(); bodyVel=nil end
    if bodyGyro then bodyGyro:Destroy(); bodyGyro=nil end
end

char = player.Character or player.CharacterAdded:Wait()
onCharacterAdded(char)
player.CharacterAdded:Connect(onCharacterAdded)

-- GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DevonsMenuGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 400)
frame.Position = UDim2.new(0.05,0,0.05,0)
frame.BackgroundColor3 = Color3.fromRGB(200,200,200)
frame.Parent = screenGui

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1,0,0,30)
titleLabel.Text = "Devon's Menu (BETA)"
titleLabel.Parent = frame

-- Create simple button function
local function createButton(text, y)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0,180,0,40)
    btn.Position = UDim2.new(0,10,0,y)
    btn.Text = text
    btn.Parent = frame
    return btn
end

local hitboxBtn = createButton("Hitbox: OFF", 50)
local followBtn = createButton("Follow: OFF", 100)
local flyBtn = createButton("Fly: OFF", 150)
local noclipBtn = createButton("NoClip: OFF", 200)

-- Button logic
local function updateButton(btn, state, name)
    btn.Text = name..(state and ": ON" or ": OFF")
end

hitboxBtn.MouseButton1Click:Connect(function()
    hitboxEnabled = not hitboxEnabled
    updateButton(hitboxBtn, hitboxEnabled, "Hitbox")
end)
followBtn.MouseButton1Click:Connect(function()
    followEnabled = not followEnabled
    updateButton(followBtn, followEnabled, "Follow")
end)
flyBtn.MouseButton1Click:Connect(function()
    flyEnabled = not flyEnabled
    updateButton(flyBtn, flyEnabled, "Fly")
end)
noclipBtn.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    updateButton(noclipBtn, noclipEnabled, "NoClip")
end)

-- Fly & noclip
local moveKeys = {W=false,A=false,S=false,D=false,Space=false,LeftShift=false}
UserInputService.InputBegan:Connect(function(input, gp)
    if not gp then
        if input.KeyCode == Enum.KeyCode.W then moveKeys.W = true end
        if input.KeyCode == Enum.KeyCode.A then moveKeys.A = true end
        if input.KeyCode == Enum.KeyCode.S then moveKeys.S = true end
        if input.KeyCode == Enum.KeyCode.D then moveKeys.D = true end
        if input.KeyCode == Enum.KeyCode.Space then moveKeys.Space = true end
        if input.KeyCode == Enum.KeyCode.LeftShift then moveKeys.LeftShift = true end
    end
end)
UserInputService.InputEnded:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.W then moveKeys.W = false end
    if input.KeyCode == Enum.KeyCode.A then moveKeys.A = false end
    if input.KeyCode == Enum.KeyCode.S then moveKeys.S = false end
    if input.KeyCode == Enum.KeyCode.D then moveKeys.D = false end
    if input.KeyCode == Enum.KeyCode.Space then moveKeys.Space = false end
    if input.KeyCode == Enum.KeyCode.LeftShift then moveKeys.LeftShift = false end
end)

RunService.RenderStepped:Connect(function()
    if char then
        -- Noclip
        for _, part in ipairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = not noclipEnabled
            end
        end

        -- Fly
        if flyEnabled and humRoot then
            if not bodyVel then
                bodyVel = Instance.new("BodyVelocity")
                bodyVel.MaxForce = Vector3.new(1e5,1e5,1e5)
                bodyVel.Parent = humRoot
            end
            if not bodyGyro then
                bodyGyro = Instance.new("BodyGyro")
                bodyGyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
                bodyGyro.Parent = humRoot
            end

            local cam = workspace.CurrentCamera
            local dir = Vector3.new()
            if moveKeys.W then dir += cam.CFrame.LookVector end
            if moveKeys.S then dir -= cam.CFrame.LookVector end
            if moveKeys.A then dir -= cam.CFrame.RightVector end
            if moveKeys.D then dir += cam.CFrame.RightVector end
            if moveKeys.Space then dir += Vector3.new(0,1,0) end
            if moveKeys.LeftShift then dir -= Vector3.new(0,1,0) end
            if dir.Magnitude > 0 then dir = dir.Unit * flySpeed end
            bodyVel.Velocity = dir
            bodyGyro.CFrame = CFrame.new(humRoot.Position, humRoot.Position + cam.CFrame.LookVector)
        else
            if bodyVel then bodyVel:Destroy(); bodyVel=nil end
            if bodyGyro then bodyGyro:Destroy(); bodyGyro=nil end
        end
    end
end)

-- Follow & hitbox
local zombieStorage = workspace:WaitForChild("Zombie Storage")
RunService.RenderStepped:Connect(function()
    -- Follow
    if followEnabled and humRoot then
        local zombies = zombieStorage:GetChildren()
        local closestZombie, closestDist = nil, math.huge
        for _, z in ipairs(zombies) do
            local hrp = z:FindFirstChild("HumanoidRootPart")
            if hrp then
                local dist = (hrp.Position - humRoot.Position).Magnitude
                if dist < closestDist then
                    closestDist = dist
                    closestZombie = hrp
                end
            end
        end
        if closestZombie then
            humRoot.CFrame = humRoot.CFrame:Lerp(CFrame.new(closestZombie.Position + Vector3.new(0, followOffset, 0)), followSpeed)
        end
    end

    -- Hitbox
    for _, z in ipairs(zombieStorage:GetChildren()) do
        local hrp = z:FindFirstChild("HumanoidRootPart")
        local hum = z:FindFirstChildWhichIsA("Humanoid")
        if hrp and hum then
            local hb = z:FindFirstChild("ZombieHitbox")
            if hitboxEnabled then
                if not hb then
                    hb = Instance.new("Part")
                    hb.Name = "ZombieHitbox"
                    hb.Anchored = true
                    hb.CanCollide = false
                    hb.Transparency = 0.5
                    hb.BrickColor = BrickColor.new("Really red")
                    hb.Parent = z
                    hb.Touched:Connect(function(hit)
                        if hit.Parent:FindFirstChildWhichIsA("Tool") then
                            hum:TakeDamage(1)
                        end
                    end)
                end
                hb.Size = hitboxSize
                hb.CFrame = hrp.CFrame
            else
                if hb then hb:Destroy() end
            end
        end
    end
end)
