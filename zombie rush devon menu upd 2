--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TeleportService = game:GetService("TeleportService")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer

--// State
local hitboxEnabled, followEnabled, flyEnabled, noclipEnabled, rapidFireEnabled, lowQualityEnabled = false, false, false, false, false, false
local menuOpen = true
local lastClickTime = 0
local followSpeed = 0.15
local followOffset = 1
local hitboxSize = Vector3.new(20,20,20)
local flySpeed = 50
local char, humRoot, humanoid, bodyVel, bodyGyro
local originalParts = {}

-- Handle respawn
local function onCharacterAdded(character)
    char = character
    humRoot = char:WaitForChild("HumanoidRootPart")
    humanoid = char:WaitForChild("Humanoid")
    if bodyVel then bodyVel:Destroy(); bodyVel=nil end
    if bodyGyro then bodyGyro:Destroy(); bodyGyro=nil end
end
char = player.Character or player.CharacterAdded:Wait()
onCharacterAdded(char)
player.CharacterAdded:Connect(onCharacterAdded)

--// GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ZombieMenuGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 700)
frame.Position = UDim2.new(0.05,0,0.05,0)
frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
frame.BorderSizePixel = 0
frame.Parent = screenGui

-- Title frame
local titleFrame = Instance.new("Frame")
titleFrame.Size = UDim2.new(1,0,0,50)
titleFrame.BackgroundColor3 = Color3.fromRGB(50,50,50)
titleFrame.Parent = frame

-- Title label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1,-50,1,0)
titleLabel.Position = UDim2.new(0,0,0,0)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = Color3.new(1,1,1)
titleLabel.Font = Enum.Font.SourceSansBold
titleLabel.TextScaled = true
titleLabel.Text = "Devon's Menu (V12)"
titleLabel.Parent = titleFrame
titleLabel.ZIndex = 25

-- Image beside title
local imageLabel = Instance.new("ImageLabel")
imageLabel.Size = UDim2.new(0,50,1,0)
imageLabel.Position = UDim2.new(1,-50,0,0)
imageLabel.BackgroundTransparency = 1
imageLabel.Image = "rbxassetid://101455013322456"
imageLabel.Parent = titleFrame
imageLabel.ZIndex = 25

-- Rainbow Title
spawn(function()
    local hue = 0
    while true do
        hue = (hue + 0.005) % 1
        titleLabel.TextColor3 = Color3.fromHSV(hue,1,1)
        RunService.RenderStepped:Wait()
    end
end)

-- Rainbow Background
spawn(function()
    local hue = 0
    while true do
        hue = (hue + 0.002) % 1
        frame.BackgroundColor3 = Color3.fromHSV(hue,0.6,0.8)
        RunService.RenderStepped:Wait()
    end
end)

-- Collapse / Expand menu with smooth animation
local collapsedSize = UDim2.new(0,250,0,50)
local expandedSize = UDim2.new(0,250,0,700)
local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local function resetCheats()
    hitboxEnabled, followEnabled, flyEnabled, noclipEnabled, rapidFireEnabled, lowQualityEnabled = false, false, false, false, false, false
end

local function setMenuState(open)
    menuOpen = open
    local targetSize = open and expandedSize or collapsedSize
    local tween = TweenService:Create(frame, tweenInfo, {Size = targetSize})
    tween:Play()
    if not open then resetCheats() end
    for _, child in ipairs(frame:GetChildren()) do
        if child ~= titleFrame then
            child.Visible = open
        end
    end
end

-- Double click to collapse/expand
titleFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        local now = tick()
        if now - lastClickTime < 0.3 then
            setMenuState(not menuOpen)
        end
        lastClickTime = now
    end
end)

-- Draggable menu
local dragging, dragStart, startPos, dragInput = false, nil, nil, nil
titleFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging=false end
        end)
    end
end)
titleFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale,startPos.X.Offset+delta.X,startPos.Y.Scale,startPos.Y.Offset+delta.Y)
    end
end)

-- Buttons
local function createButton(name, posY, color)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0,200,0,40)
    btn.Position = UDim2.new(0,25,0,posY)
    btn.BackgroundColor3 = color or Color3.fromRGB(200,0,0)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Text = name
    btn.Font = Enum.Font.GothamBold
    btn.TextScaled = true
    btn.Parent = frame
    btn.ZIndex = 10
    return btn
end

local hitboxButton    = createButton("Hitbox: OFF", 60)
local followButton    = createButton("Follow: OFF", 110)
local flyButton       = createButton("Fly: OFF", 160)
local noclipButton    = createButton("NoClip: OFF", 210)
local killAllButton   = createButton("Kill All Zombies", 260, Color3.fromRGB(255,165,0))
local rapidFireButton = createButton("Rapid Fire: OFF", 310)
local lowQualityButton= createButton("Low Quality: OFF", 360, Color3.fromRGB(100,100,100))
local rejoinButton    = createButton("Rejoin Server", 410, Color3.fromRGB(0,170,255))

-- Update button colors
local function updateButton(btn,state,name)
    btn.Text = name..(state and ": ON" or ": OFF")
    btn.BackgroundColor3 = state and Color3.fromRGB(0,200,0) or Color3.fromRGB(200,0,0)
end

-- Buttons logic
hitboxButton.MouseButton1Click:Connect(function()
    hitboxEnabled = not hitboxEnabled
    updateButton(hitboxButton,hitboxEnabled,"Hitbox")
end)
followButton.MouseButton1Click:Connect(function()
    followEnabled = not followEnabled
    updateButton(followButton,followEnabled,"Follow")
end)
flyButton.MouseButton1Click:Connect(function()
    flyEnabled = not flyEnabled
    updateButton(flyButton,flyEnabled,"Fly")
end)
noclipButton.MouseButton1Click:Connect(function()
    noclipEnabled = not noclipEnabled
    updateButton(noclipButton,noclipEnabled,"NoClip")
end)
rapidFireButton.MouseButton1Click:Connect(function()
    rapidFireEnabled = not rapidFireEnabled
    updateButton(rapidFireButton, rapidFireEnabled, "Rapid Fire")
end)
lowQualityButton.MouseButton1Click:Connect(function()
    lowQualityEnabled = not lowQualityEnabled
    updateButton(lowQualityButton, lowQualityEnabled, "Low Quality")
    if lowQualityEnabled then
        originalParts = {}
        for _, obj in ipairs(workspace:GetDescendants()) do
            if obj:IsA("BasePart") and obj.Parent ~= char then
                originalParts[obj] = {obj.Material, obj.Color}
                obj.Material = Enum.Material.SmoothPlastic
                obj.Color = Color3.fromRGB(127,127,127)
            end
        end
    else
        for obj, props in pairs(originalParts) do
            if obj and obj.Parent then
                obj.Material = props[1]
                obj.Color = props[2]
            end
        end
        originalParts = {}
    end
end)
killAllButton.MouseButton1Click:Connect(function()
    local zombieStorage = workspace:FindFirstChild("Zombie Storage")
    if zombieStorage then
        for _, z in ipairs(zombieStorage:GetChildren()) do
            local hum = z:FindFirstChildWhichIsA("Humanoid")
            if hum then hum.Health = 0 end
        end
    end
end)
rejoinButton.MouseButton1Click:Connect(function()
    TeleportService:Teleport(game.PlaceId, player)
end)

-- Sliders
local function createSlider(labelText, posY, minVal, maxVal, callback)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(0,200,0,20)
    label.Position = UDim2.new(0,25,0,posY)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextScaled = true
    label.Text = labelText
    label.Parent = frame
    label.ZIndex = 10

    local sliderFrame = Instance.new("Frame")
    sliderFrame.Size = UDim2.new(0,200,0,20)
    sliderFrame.Position = UDim2.new(0,25,0,posY+20)
    sliderFrame.BackgroundColor3 = Color3.fromRGB(70,70,70)
    sliderFrame.Parent = frame
    sliderFrame.ZIndex = 10
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0,15)
    sliderCorner.Parent = sliderFrame

    local fill = Instance.new("Frame")
    fill.Size = UDim2.new(0,0,1,0)
    fill.BackgroundColor3 = Color3.fromRGB(0,200,0)
    fill.Parent = sliderFrame
    fill.ZIndex = 11
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0,15)
    fillCorner.Parent = fill

    local knob = Instance.new("TextButton")
    knob.Size = UDim2.new(0,18,1,0)
    knob.Position = UDim2.new(0,0,0,0)
    knob.BackgroundColor3 = Color3.fromRGB(255,255,255)
    knob.Text = ""
    knob.Parent = sliderFrame
    knob.AutoButtonColor = false
    knob.ZIndex = 12
    local knobCorner = Instance.new("UICorner")
    knobCorner.CornerRadius = UDim.new(0,15)
    knobCorner.Parent = knob

    local dragging = false
    local value = minVal

    knob.MouseButton1Down:Connect(function() dragging = true end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType==Enum.UserInputType.MouseButton1 then dragging=false end
    end)

    RunService.RenderStepped:Connect(function()
        if dragging then
            local mouseX = math.clamp(UserInputService:GetMouseLocation().X - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X)
            fill.Size = UDim2.new(0, mouseX, 1, 0)
            knob.Position = UDim2.new(0, math.clamp(mouseX - knob.AbsoluteSize.X/2, 0, sliderFrame.AbsoluteSize.X - knob.AbsoluteSize.X), 0, 0)
            value = minVal + (mouseX/sliderFrame.AbsoluteSize.X)*(maxVal-minVal)
            callback(value)
            label.Text = labelText:match(".*:").." "..string.format("%.2f", value)
        end
    end)
end

createSlider("Follow Speed: 0.15", 460, 0.05, 0.5, function(v) followSpeed = v end)
createSlider("Follow Height: 1", 500, 1, 100, function(v) followOffset = v end)
createSlider("Hitbox Size: 20", 540, 5, 100, function(v) hitboxSize = Vector3.new(v,v,v) end)

-- Movement keys
local keys = {W=false,A=false,S=false,D=false,Space=false,LeftShift=false}
UserInputService.InputBegan:Connect(function(input,gp)
    if not gp and keys[input.KeyCode.Name]~=nil then keys[input.KeyCode.Name]=true end
end)
UserInputService.InputEnded:Connect(function(input)
    if keys[input.KeyCode.Name]~=nil then keys[input.KeyCode.Name]=false end
end)

local zombieStorage = workspace:WaitForChild("Zombie Storage")
local mouse = player:GetMouse()
local firing = false

-- Rapid fire
mouse.Button1Down:Connect(function()
    if rapidFireEnabled then
        firing = true
        while firing and rapidFireEnabled do
            local tool = char:FindFirstChildOfClass("Tool")
            if tool and tool:FindFirstChild("Handle") then pcall(function() tool:Activate() end) end
            task.wait(0.01)
        end
    end
end)
mouse.Button1Up:Connect(function() firing=false end)

-- Main RenderStepped loop
RunService.RenderStepped:Connect(function()
    -- Fly
    if flyEnabled and humRoot then
        if not bodyVel then
            bodyVel = Instance.new("BodyVelocity")
            bodyVel.MaxForce = Vector3.new(1e5,1e5,1e5)
            bodyVel.Parent = humRoot
        end
        if not bodyGyro then
            bodyGyro = Instance.new("BodyGyro")
            bodyGyro.MaxTorque = Vector3.new(1e5,1e5,1e5)
            bodyGyro.Parent = humRoot
        end
        local cam = workspace.CurrentCamera
        local lookVector = cam.CFrame.LookVector
        local rightVector = cam.CFrame.RightVector
        local moveDir = Vector3.new()
        if keys.W then moveDir += lookVector end
        if keys.S then moveDir -= lookVector end
        if keys.A then moveDir -= rightVector end
        if keys.D then moveDir += rightVector end
        if keys.Space then moveDir += Vector3.new(0,1,0) end
        if keys.LeftShift then moveDir -= Vector3.new(0,1,0) end
        if moveDir.Magnitude>0 then moveDir=moveDir.Unit*flySpeed end
        bodyVel.Velocity=moveDir
        bodyGyro.CFrame=CFrame.new(humRoot.Position, humRoot.Position + cam.CFrame.LookVector)
    else
        if bodyVel then bodyVel:Destroy(); bodyVel=nil end
        if bodyGyro then bodyGyro:Destroy(); bodyGyro=nil end
    end

    -- NoClip
    if char then
        for _, p in ipairs(char:GetDescendants()) do
            if p:IsA("BasePart") then p.CanCollide = not noclipEnabled end
        end
    end

    -- Follow nearest zombie
    if followEnabled and humRoot then
        local closestZombie, closestDist
        for _, z in ipairs(zombieStorage:GetChildren()) do
            local hrp = z:FindFirstChild("HumanoidRootPart")
            if hrp then
                local dist = (hrp.Position - humRoot.Position).Magnitude
                if not closestDist or dist < closestDist then
                    closestDist = dist
                    closestZombie = hrp
                end
            end
        end
        if closestZombie then
            humRoot.CFrame = humRoot.CFrame:Lerp(
                CFrame.new(closestZombie.Position + Vector3.new(0, followOffset, 0)),
                followSpeed
            )
        end
    end

    -- Hitbox
    for _, z in ipairs(zombieStorage:GetChildren()) do
        local hrp = z:FindFirstChild("HumanoidRootPart")
        local hum = z:FindFirstChildWhichIsA("Humanoid")
        if hrp and hum then
            local hb = z:FindFirstChild("ZombieHitbox")
            if hitboxEnabled then
                if not hb then
                    hb = Instance.new("Part")
                    hb.Name = "ZombieHitbox"
                    hb.Anchored = true
                    hb.CanCollide = false
                    hb.Transparency = 0.5
                    hb.BrickColor = BrickColor.new("Really red")
                    hb.Size = hitboxSize
                    hb.Parent = z
                end
                hb.CFrame = hrp.CFrame
            else
                if hb then hb:Destroy() end
            end
        end
    end
end)
